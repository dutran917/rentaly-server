// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  password   String
  email      String       @unique
  full_name  String?
  phone      String?      @unique
  role       role         @default(user)
  status     Boolean      @default(true)
  verified   Boolean      @default(false)
  apartment  Apartment[]
  RoomRenter RoomRenter[]
}

model Room {
  id          Int          @id @default(autoincrement())
  title       String
  content     String?
  price       Int
  area        Float
  maximum     Int
  living_room Int          @default(1)
  bed_room    Int?
  floor       String?
  Apartment   Apartment    @relation(fields: [apartmentId], references: [id])
  apartmentId Int
  TagsInRoom  TagsInRoom[]
  RoomRenter  RoomRenter[]
}

model RoomRenter {
  id       Int       @id @default(autoincrement())
  user     User      @relation(fields: [user_id], references: [id])
  user_id  Int
  room     Room      @relation(fields: [room_id], references: [id])
  room_id  Int
  price    Int //Ca chu ky
  start_at DateTime  @default(now())
  end_at   DateTime?
}

model Apartment {
  id              Int               @id @default(autoincrement())
  title           String
  subtitle        String
  content         String?
  published       Boolean?          @default(false)
  owner           User              @relation(fields: [ownerId], references: [id])
  ownerId         Int
  address         String
  lat             Float
  long            Float
  district        String
  province        String
  rooms           Room[]
  TagsInApartment TagsInApartment[]
  image           image[]
}

model TagsInApartment {
  apartment      Apartment    @relation(fields: [apartmentId], references: [id])
  apartmentId    Int
  tag            ApartmentTag @relation(fields: [apartmentTagId], references: [id])
  apartmentTagId Int

  @@id([apartmentId, apartmentTagId])
}

model TagsInRoom {
  room      Room    @relation(fields: [roomId], references: [id])
  tag       RoomTag @relation(fields: [roomTagId], references: [id])
  roomId    Int
  roomTagId Int

  @@id([roomId, roomTagId])
}

model ApartmentTag {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  icon            String
  createdAt       DateTime          @default(now())
  TagsInApartment TagsInApartment[]
}

model RoomTag {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  icon       String
  createdAt  DateTime     @default(now())
  TagsInRoom TagsInRoom[]
}

model image {
  id          Int       @id @default(autoincrement())
  url         String
  apartment   Apartment @relation(fields: [apartmentId], references: [id])
  apartmentId Int
}

enum role {
  user
  lessor
  admin
}
